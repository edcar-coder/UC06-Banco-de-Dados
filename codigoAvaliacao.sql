CREATE TABLE IF NOT EXISTS CLIENTES (
    ID SERIAL PRIMARY KEY,
    NOME VARCHAR(100) NOT NULL,
    EMAIL VARCHAR(100) UNIQUE NOT NULL,
    TELEFONE VARCHAR(20) UNIQUE NOT NULL,
    DATA_CADASTRO DATE DEFAULT CURRENT_DATE
);

CREATE TABLE IF NOT EXISTS SERVICOS (
    ID SERIAL PRIMARY KEY,
    NOME VARCHAR(100) NOT NULL,
    DESCRICAO TEXT NOT NULL,
    PRECO DECIMAL(10, 2) NOT NULL CHECK (preco > 0),
    TIPO_SERVICO VARCHAR(50) NOT NULL,
    CONSTRAINT TIPO_SERVICO CHECK (TIPO_SERVICO IN ('CONSULTORIA', 'SUPORTE', 'MANUTENCAO'))
);

CREATE TABLE IF NOT EXISTS TECNICOS (
    ID SERIAL PRIMARY KEY,
    NOME VARCHAR(100) NOT NULL,
    ESPECIALIDADES VARCHAR(50) NOT NULL,
    DATA_CONTRATACAO DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS CHAMADOS (
    ID SERIAL PRIMARY KEY,
    CLIENTE_ID INT NOT NULL,
    SERVICO_ID INT NOT NULL,
    TECNICO_ID INT NOT NULL,
    DATA_CHAMADO DATE NOT NULL,
    STATUS VARCHAR(20) NOT NULL CHECK (STATUS IN ('PENDENTE', 'EM ANDAMENTO', 'FINALIZADO')),
    DESCRICAO TEXT NOT NULL,
    CONSTRAINT FK_CHAMADO_CLIENTE FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTES(ID) ON DELETE CASCADE,
    CONSTRAINT FK_CHAMADO_SERVICO FOREIGN KEY (SERVICO_ID) REFERENCES SERVICOS(ID) ON DELETE CASCADE,
    CONSTRAINT FK_CHAMADO_TECNICO FOREIGN KEY (TECNICO_ID) REFERENCES TECNICOS(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS PAGAMENTOS (
    ID SERIAL PRIMARY KEY,
    CLIENTE_ID INT,
    CHAMADO_ID INT,
    VALOR_PAGO DECIMAL(10,2) NOT NULL CHECK (valor_pago > 0),
    DATA_PAGAMENTO DATE NOT NULL,
    FORMA_PAGAMENTO VARCHAR(50) NOT NULL,
    CONSTRAINT FK_PAGAMENTOS_CLIENTE FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTES(ID) ON DELETE CASCADE,
    CONSTRAINT FK_PAGAMENTOS_CHAMADO FOREIGN KEY (CHAMADO_ID) REFERENCES CHAMADOS(ID) ON DELETE CASCADE
);


INSERT INTO CLIENTES (NOME, EMAIL, TELEFONE, DATA_CADASTRO)
VALUES 
    ('JOÃO SILVA', 'joao@email.com', '(11)98765-4321', '2023-01-15'),
    ('MARIA OLIVEIRA', 'maria@email.com', '(21)99654-3210', '2023-02-20'),
    ('PEDRO SOUZA', 'pedro@email.com', '(31)99765-1234', '2023-03-10'),
    ('ANA COSTA', 'ana@email.com', '(41)98888-9999', '2023-04-25'),
    ('LUCAS ALMEIDA', 'lucas@email.com', '(61)99123-4567', '2023-05-30');


INSERT INTO SERVICOS (NOME, DESCRICAO, PRECO, TIPO_SERVICO)
VALUES 
    ('CONSULTORIA EM TI', 'CONSULTORIA ESPECIALIZADA EM INFRAESTRUTURA DE TI', 500.00, 'CONSULTORIA'),
    ('MANUTENÇÃO DE EQUIPAMENTOS', 'MANUTENÇÃO PREVENTIVA E CORRETIVA DE EQUIPAMENTOS', 300.00, 'MANUTENCAO'),
    ('SUPORTE TÉCNICO', 'SUPORTE REMOTO E PRESENCIAL PARA EMPRESAS', 200.00, 'SUPORTE');


INSERT INTO TECNICOS (NOME, ESPECIALIDADES, DATA_CONTRATACAO)
VALUES 
    ('CARLOS OLIVEIRA', 'CONSULTORIA TI', '2022-10-10'),
    ('FERNANDA SOUZA', 'MANUTENÇÃO', '2021-06-15'),
    ('ROBERTO COSTA', 'SUPORTE TÉCNICO', '2020-08-20');


INSERT INTO CHAMADOS (CLIENTE_ID, TECNICO_ID, SERVICO_ID, DATA_CHAMADO, STATUS, DESCRICAO)
VALUES 
    (1, 1, 1, '2023-06-01', 'PENDENTE', 'REPARO NO CABEAMENTO DE REDE'),
    (2, 2, 2, '2023-07-10', 'EM ANDAMENTO', 'MANUTENÇÃO NO SERVIDOR'),
    (3, 3, 3, '2023-08-05', 'FINALIZADO', 'CONFIGURAÇÃO DE SOFTWARE EMPRESARIAL'),
    (4, 1, 2, '2023-09-20', 'PENDENTE', 'MANUTENÇÃO DE COMPUTADOR'),
    (5, 2, 1, '2023-10-15', 'FINALIZADO', 'SUPORTE PARA SOFTWARE');


INSERT INTO PAGAMENTOS (CLIENTE_ID, CHAMADO_ID, VALOR_PAGO, DATA_PAGAMENTO, FORMA_PAGAMENTO)
VALUES 
    (1, 1, 350.00, '2023-06-15', 'CARTÃO DE CRÉDITO'),
    (2, 2, 450.00, '2023-07-15', 'CARTÃO OU PIX'),
    (3, 3, 600.00, '2023-08-10', 'PIX'),
    (4, 4, 300.00, '2023-09-25', 'PIX');

-- CONSULTAS:

-- Questão 4°
SELECT NOME, EMAIL FROM CLIENTES;

-- Questão 5°
SELECT NOME, PRECO FROM SERVICOS;

-- Questão 6°
SELECT NOME, ESPECIALIDADES FROM TECNICOS;

-- Questão 7°
SELECT DESCRICAO, STATUS FROM CHAMADOS;

-- Questão 8°
SELECT VALOR_PAGO, DATA_PAGAMENTO FROM PAGAMENTOS;

-- Questão 9°
SELECT CLIENTES.NOME, CHAMADOS.DESCRICAO
FROM CLIENTES
JOIN CHAMADOS ON CLIENTES.ID = CHAMADOS.CLIENTE_ID
WHERE CHAMADOS.STATUS = 'EM ANDAMENTO';

-- Questão 10°
SELECT TECNICOS.NOME, TECNICOS.ESPECIALIDADES
FROM TECNICOS
JOIN CHAMADOS ON TECNICOS.ID = CHAMADOS.TECNICO_ID
JOIN SERVICOS ON SERVICOS.ID = CHAMADOS.SERVICO_ID
WHERE SERVICOS.TIPO_SERVICO = 'MANUTENCAO';

-- Questão 11°
SELECT CLIENTES.NOME, SUM(PAGAMENTOS.VALOR_PAGO) AS TOTAL_PAGO
FROM CLIENTES
JOIN PAGAMENTOS ON CLIENTES.ID = PAGAMENTOS.CLIENTE_ID
GROUP BY CLIENTES.NOME;

-- Questão 12°
SELECT CLIENTES.NOME, SERVICOS.TIPO_SERVICO, SERVICOS.DESCRICAO, SERVICOS.NOME, SERVICOS.PRECO
FROM CLIENTES
JOIN CHAMADOS ON CLIENTES.ID = CHAMADOS.CLIENTE_ID
JOIN SERVICOS ON SERVICOS.ID = CHAMADOS.SERVICO_ID;

-- Questão 13°
SELECT TECNICOS.NOME, SERVICOS.NOME AS NOME_SERVICO, SERVICOS.PRECO
FROM TECNICOS
JOIN CHAMADOS ON TECNICOS.ID = CHAMADOS.TECNICO_ID
JOIN SERVICOS ON SERVICOS.ID = CHAMADOS.SERVICO_ID
WHERE SERVICOS.PRECO > 400;

-- Questão 14°
UPDATE SERVICOS
SET PRECO = 350
WHERE TIPO_SERVICO = 'MANUTENCAO' AND PRECO < 350;

-- Exibir todos os serviços após a atualização
SELECT * FROM SERVICOS;

-- Questão 15°
DELETE FROM TECNICOS
WHERE ID NOT IN (SELECT DISTINCT TECNICO_ID FROM CHAMADOS);

-- Exibir técnicos restantes.
SELECT * FROM TECNICOS;

-- Exibir todos os chamados.
SELECT * FROM CHAMADOS;

-- Exibir todos os pagamentos.
SELECT * FROM PAGAMENTOS;
