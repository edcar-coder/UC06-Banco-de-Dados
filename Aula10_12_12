Questão  01°
create table if not exists GENERO(
	ID SERIAL primary key,
	NOME VARCHAR(50) not null unique
);
--Questão 02°
create table if not exists FILME(
	ID SERIAL primary key,
	NOME VARCHAR(60) not null,
	ID_GENERO INT not null,
	constraint fk_genero foreign key (ID_GENERO) references GENERO(ID)
);
--Questão 03°
insert into GENERO (nome)
values ('Animação', 1), ('Terror', 2), ('Ação', 3), ('Drama', 4), ('Comedia', 5);

 --Questão 04°
insert into FILME(nome, id_genero)
values ('Batman', 3), ('The Battle of the Dark River', 3),
('White Duck', 1), ('Breaking Barriers', 4), ('The Two Hours', 2);

--questão 05°
insert into FILME(nome, id_genero)
values ('Batman - o retorno', 3), ('Moana', 7),
('Pato Donald', 1), ('Hulk', 2), ('Tropa de Elite', 6);

--questão 05°
insert into GENERO (id, nome)
values (6,'Documentario'), (7, 'Suspense');

--questão 06°
select nome from filme
where id_genero =(select id from genero where nome ='Terror');

--questão 07°
select nome from filme
where id_genero =(select id from genero where nome ='Terror')
or id_genero =(select id from genro where npme = 'Drama');

ALTER TABLE FILME ADD CONSTRAINT nome_filme UNIQUE(nome);
  
select * from genero ;
select * from filme ; 


--Questão 9°
]--retorna todos os filmes com letra T; T% comeca, %T termina, %T% contem a letra na frase ou palavra.
SELECT * FROM FILME WHERE NOME ILIKE 't%';

--Questaõ 10° 
UPDATE FILME
    SET id_genero=4   --Trocando numeros aleatorios.
	WHERE id_genero=3;

UPDATE FILME
    SET id_genero =(select id from genero where nome = 'Ação')
    where id_genero = (select id from genero where nome = 'Drama');

--Questão 11°
SELECT FILME.NOME AS NOME_DO_FILME, GENERO.NOME AS GENERO FROM FILME, GENERO 
WHERE ID_GENERO = GENERO.ID ORDER BY FILME.NOME;

SELECT FILME.NOME AS FILME_NOME, GENERO.NOME AS GENERO.NOME
FROM FILME JOIN GENERO ON FILME.ID_GENERO.ID = GENERO.ID ORDER BY FILME.NOME;

--Questão 12°
DELETE FROM FILME 
WHERE ID_GENERO = ( select id from genero where nome ='Ação');


